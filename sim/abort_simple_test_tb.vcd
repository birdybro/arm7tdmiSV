$date
	Fri Jul 25 11:11:28 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module abort_simple_test_tb $end
$var wire 32 ! exception_vector [31:0] $end
$var wire 3 " exception_type [2:0] $end
$var wire 1 # exception_taken $end
$var wire 32 $ exception_spsr [31:0] $end
$var wire 5 % exception_mode [4:0] $end
$var wire 32 & exception_cpsr [31:0] $end
$var reg 1 ' clk $end
$var reg 32 ( current_cpsr [31:0] $end
$var reg 5 ) current_mode [4:0] $end
$var reg 32 * current_pc [31:0] $end
$var reg 1 + data_abort $end
$var reg 1 , fiq $end
$var reg 1 - irq $end
$var reg 1 . prefetch_abort $end
$var reg 1 / rst_n $end
$var reg 1 0 swi $end
$var reg 1 1 undefined_instr $end
$var integer 32 2 test_count [31:0] $end
$var integer 32 3 test_passed [31:0] $end
$scope module u_exception $end
$var wire 1 ' clk $end
$var wire 32 4 current_cpsr [31:0] $end
$var wire 5 5 current_mode [4:0] $end
$var wire 32 6 current_pc [31:0] $end
$var wire 1 + data_abort $end
$var wire 32 7 exception_spsr [31:0] $end
$var wire 1 , fiq $end
$var wire 1 - irq $end
$var wire 1 . prefetch_abort $end
$var wire 1 / rst_n $end
$var wire 1 0 swi $end
$var wire 1 1 undefined_instr $end
$var wire 1 8 irq_disabled $end
$var wire 1 9 fiq_disabled $end
$var reg 32 : exception_cpsr [31:0] $end
$var reg 5 ; exception_mode [4:0] $end
$var reg 1 # exception_taken $end
$var reg 3 < exception_type [2:0] $end
$var reg 32 = exception_vector [31:0] $end
$upscope $end
$scope task test_abort_cpsr_update $end
$upscope $end
$scope task test_abort_priority $end
$upscope $end
$scope task test_data_abort_exception $end
$upscope $end
$scope task test_prefetch_abort_exception $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 =
b0 <
b10011 ;
bx :
x9
x8
bx 7
bx 6
bx 5
bx 4
b0 3
b0 2
01
00
0/
0.
0-
0,
0+
bx *
bx )
bx (
0'
bx &
b10011 %
bx $
0#
b0 "
b0 !
$end
#5000
1/
1'
#10000
0'
#15000
1'
#20000
0'
#25000
b10000 !
b10000 =
b10111 %
b10111 ;
b100 "
b100 <
1#
b10010111 &
b10010111 :
08
09
1+
b1000000000000 *
b1000000000000 6
b11111 $
b11111 7
b11111 (
b11111 4
b10000 )
b10000 5
b1 2
1'
#30000
0'
#35000
b11111 &
b11111 :
b0 !
b0 =
b10011 %
b10011 ;
b0 "
b0 <
0#
0+
b1 3
1'
#40000
0'
#45000
b10010111 &
b10010111 :
b1100 !
b1100 =
b10111 %
b10111 ;
b11 "
b11 <
1#
1.
b10000000000000 *
b10000000000000 6
b10 2
1'
#50000
0'
#55000
b11111 &
b11111 :
b0 !
b0 =
b10011 %
b10011 ;
b0 "
b0 <
0#
0.
b10 3
1'
#60000
0'
#65000
b10010111 &
b10010111 :
b10000 !
b10000 =
b10111 %
b10111 ;
b100 "
b100 <
1#
1,
1-
1+
b11000000000000 *
b11000000000000 6
b11 2
1'
#70000
0'
#75000
b11111 &
b11111 :
b0 !
b0 =
b10011 %
b10011 ;
b0 "
b0 <
0#
0,
0-
0+
b11 3
1'
#80000
0'
#85000
b10000 !
b10000 =
b10111 %
b10111 ;
b100 "
b100 <
1#
b1100000000000000000000010010111 &
b1100000000000000000000010010111 :
1+
b100000000000000 *
b100000000000000 6
b1100000000000000000000000011111 $
b1100000000000000000000000011111 7
b1100000000000000000000000011111 (
b1100000000000000000000000011111 4
b100 2
1'
#90000
0'
#95000
b1100000000000000000000000011111 &
b1100000000000000000000000011111 :
b0 !
b0 =
b10011 %
b10011 ;
b0 "
b0 <
0#
0+
b100 3
1'
#100000
0'
#105000
1'
#110000
0'
#115000
1'
#120000
0'
#125000
1'
#130000
0'
#135000
1'
#140000
0'
#145000
1'
#150000
0'
#155000
1'
