$date
	Sun Jul 27 09:22:23 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module fetch_test_tb $end
$var wire 2 ! imem_size [1:0] $end
$var wire 32 " imem_wdata [31:0] $end
$var wire 1 # imem_write $end
$var wire 32 $ pc_out [31:0] $end
$var wire 32 % instruction [31:0] $end
$var wire 1 & instr_valid $end
$var wire 32 ' imem_vaddr [31:0] $end
$var wire 1 ( imem_req $end
$var wire 32 ) fetch_abort_addr [31:0] $end
$var wire 1 * fetch_abort $end
$var reg 1 + branch_taken $end
$var reg 32 , branch_target [31:0] $end
$var reg 1 - clk $end
$var reg 1 . fetch_en $end
$var reg 1 / flush $end
$var reg 1 0 high_vectors $end
$var reg 1 1 imem_abort $end
$var reg 32 2 imem_rdata [31:0] $end
$var reg 1 3 imem_ready $end
$var reg 1 4 rst_n $end
$var reg 1 5 stall $end
$var reg 1 6 thumb_mode $end
$var integer 32 7 test_count [31:0] $end
$var integer 32 8 test_passed [31:0] $end
$scope module u_fetch $end
$var wire 1 + branch_taken $end
$var wire 32 9 branch_target [31:0] $end
$var wire 1 - clk $end
$var wire 32 : fetch_abort_addr [31:0] $end
$var wire 1 . fetch_en $end
$var wire 1 ; fetch_needed $end
$var wire 1 / flush $end
$var wire 1 0 high_vectors $end
$var wire 1 1 imem_abort $end
$var wire 32 < imem_rdata [31:0] $end
$var wire 1 3 imem_ready $end
$var wire 2 = imem_size [1:0] $end
$var wire 32 > imem_vaddr [31:0] $end
$var wire 32 ? imem_wdata [31:0] $end
$var wire 1 # imem_write $end
$var wire 1 & instr_valid $end
$var wire 32 @ instruction [31:0] $end
$var wire 32 A pc_out [31:0] $end
$var wire 1 B prefetch_shift $end
$var wire 1 4 rst_n $end
$var wire 1 5 stall $end
$var wire 1 6 thumb_mode $end
$var wire 1 ( imem_req $end
$var wire 1 * fetch_abort $end
$var reg 3 C current_state [2:0] $end
$var reg 32 D extracted_instruction [31:0] $end
$var reg 32 E fetch_addr [31:0] $end
$var reg 3 F next_state [2:0] $end
$var reg 32 G pc [31:0] $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 H i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop1 $end
$var integer 32 I i [31:0] $end
$upscope $end
$scope task test_case $end
$var reg 32 J expected_instruction [31:0] $end
$var reg 32 K expected_pc [31:0] $end
$var reg 1 L expected_valid $end
$upscope $end
$scope task wait_cycles $end
$var integer 32 M cycles [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b101 M
xL
bx K
bx J
b1000000000000 I
b10000 H
b0 G
b0 F
b0 E
b0 D
b0 C
0B
b0 A
b0 @
b0 ?
b0 >
b10 =
b0 <
0;
b0 :
b0 9
b0 8
b0 7
06
05
04
03
b0 2
01
00
0/
0.
0-
b0 ,
0+
0*
b0 )
0(
b0 '
0&
b0 %
b0 $
0#
b0 "
b10 !
$end
#5000
1-
#10000
0-
#15000
1-
#20000
0-
#25000
1-
#30000
0-
#35000
1-
#40000
0-
#45000
13
14
1-
#50000
0-
#55000
1-
#60000
0-
#65000
1-
#70000
0-
#75000
1-
#80000
0-
#85000
1-
#90000
0-
#95000
b1 F
1;
b1 7
b0 K
b11100011101000000000000000000001 J
1L
1.
1-
#100000
0-
#105000
b10 F
1(
b1 C
1-
#110000
0-
#115000
1B
1&
b100 )
b100 :
b100 '
b100 >
b100 E
b1 F
0(
b10 C
b11100011101000000000000000000001 2
b11100011101000000000000000000001 <
1-
#120000
0-
#125000
0B
0&
b10 F
1(
b1 C
b100 $
b100 A
b100 G
b1 M
1-
#130000
0-
#135000
1B
1&
b1 F
b1000 )
b1000 :
b1000 '
b1000 >
b1000 E
b11100011101000000000000000000001 %
b11100011101000000000000000000001 @
b11100011101000000000000000000001 D
0(
b10 C
b11100011101000000001000000000010 2
b11100011101000000001000000000010 <
b10 7
b100 K
b11100011101000000001000000000010 J
1-
#140000
0-
#145000
0B
0&
b0 %
b0 @
b0 D
b10 F
1(
b1 C
b1000 $
b1000 A
b1000 G
1-
#150000
0-
#155000
1B
1&
b1 F
b1100 )
b1100 :
b1100 '
b1100 >
b1100 E
b11100011101000000001000000000010 %
b11100011101000000001000000000010 @
b11100011101000000001000000000010 D
0(
b10 C
b11100000100000000010000000000001 2
b11100000100000000010000000000001 <
b11 7
b1000 K
b11100000100000000010000000000001 J
1-
#160000
0-
#165000
0&
b0 %
b0 @
b0 D
1(
b1 C
b1100 $
b1100 A
b1100 G
b10 F
0B
b11 M
15
1-
#170000
0-
#175000
1&
b10000 )
b10000 :
b10000 '
b10000 >
b10000 E
b11100000100000000010000000000001 %
b11100000100000000010000000000001 @
b11100000100000000010000000000001 D
0(
b10 C
b11100011101000000011000000000011 2
b11100011101000000011000000000011 <
1-
#180000
0-
#185000
1-
#190000
0-
#195000
b1 F
1B
b1 M
05
b100 7
b1 8
1-
#200000
0-
#205000
0B
0&
b0 %
b0 @
b0 D
b10 F
1(
b1 C
b10000 $
b10000 A
b10000 G
b101 7
b1100 K
b11100011101000000011000000000011 J
1-
#210000
0-
#215000
1B
1&
b1 F
b10100 )
b10100 :
b10100 '
b10100 >
b10100 E
b11100011101000000011000000000011 %
b11100011101000000011000000000011 @
b11100011101000000011000000000011 D
0(
b10 C
b11100001101000000100000000000000 2
b11100001101000000100000000000000 <
b10000 ,
b10000 9
1+
1-
#220000
0-
#225000
0B
0&
b0 %
b0 @
b0 D
b10 F
1(
b1 C
b10100 $
b10100 A
b10100 G
b10 M
0+
1-
#230000
0-
#235000
1B
1&
b1 F
b11000 )
b11000 :
b11000 '
b11000 >
b11000 E
b11100001101000000100000000000000 %
b11100001101000000100000000000000 @
b11100001101000000100000000000000 D
0(
b10 C
b11101010111111111111111111111110 2
b11101010111111111111111111111110 <
1-
#240000
0-
#245000
0B
0&
b0 %
b0 @
b0 D
b10 F
1(
b1 C
b11000 $
b11000 A
b11000 G
b110 7
b10000 K
b11100001101000000100000000000000 J
1-
#250000
0-
#255000
1B
1&
b11100 )
b11100 :
b11100 '
b11100 >
b11100 E
b1111111111111110 %
b1111111111111110 @
b1111111111111110 D
b1000000 $
b1000000 A
b1000000 G
0(
b10 C
b11100001101000000000000000000000 2
b11100001101000000000000000000000 <
b1 F
b1 M
b1000000 ,
b1000000 9
1+
16
1-
#260000
0-
#265000
0B
0&
b0 %
b0 @
b0 D
b10 F
b1000010 )
b1000010 :
b1000010 '
b1000010 >
b1000010 E
1(
b1 C
b1000010 $
b1000010 A
b1000010 G
b10 M
0+
1-
#270000
0-
#275000
1B
1&
b1 F
b1000110 )
b1000110 :
b1000110 '
b1000110 >
b1000110 E
b1110000110100000 %
b1110000110100000 @
b1110000110100000 D
0(
b10 C
b100001000000010010000000000001 2
b100001000000010010000000000001 <
1-
#280000
0-
#285000
0B
0&
b0 %
b0 @
b0 D
b10 F
b1000100 )
b1000100 :
b1000100 '
b1000100 >
b1000100 E
1(
b1 C
b1000100 $
b1000100 A
b1000100 G
b111 7
b1000000 K
b10000000000001 J
1-
#290000
0-
#295000
1B
1&
b1 F
b1001000 )
b1001000 :
b1001000 '
b1001000 >
b1001000 E
b10000000000001 %
b10000000000001 @
b10000000000001 D
0(
b10 C
b11000010000000011000100000010 2
b11000010000000011000100000010 <
b1 M
1-
#300000
0-
#305000
0B
0&
b0 %
b0 @
b0 D
b10 F
b1000110 )
b1000110 :
b1000110 '
b1000110 >
b1000110 E
1(
b1 C
b1000110 $
b1000110 A
b1000110 G
b1000 7
b1000010 K
b10000100000001 J
1-
#310000
0-
#315000
1B
1&
b1 F
b1001010 )
b1001010 :
b1001010 '
b1001010 >
b1001010 E
b1100001000000 %
b1100001000000 @
b1100001000000 D
0(
b10 C
1-
#320000
0-
#325000
0B
0&
b0 %
b0 @
b0 D
b10 F
b1001000 )
b1001000 :
b1001000 '
b1001000 >
b1001000 E
1(
b1 C
b1001000 $
b1001000 A
b1001000 G
b1001 7
b1000100 K
b1100001000000 J
1-
#330000
0-
#335000
0(
b100 C
b11100111111111100100011000000011 2
b11100111111111100100011000000011 <
b0 F
1/
1-
#340000
0-
#345000
b0 C
b1 F
b11 M
0/
1-
#350000
0-
#355000
b10 F
1(
b1 C
1-
#360000
0-
#365000
1B
1&
b1001100 )
b1001100 :
b1001100 '
b1001100 >
b1001100 E
b100011000000011 %
b100011000000011 @
b100011000000011 D
b1 F
0(
b10 C
1-
#370000
0-
#375000
0B
0&
b11111111111111110000000000000000 )
b11111111111111110000000000000000 :
b11111111111111110000000000000000 '
b11111111111111110000000000000000 >
b11111111111111110000000000000000 E
b0 %
b0 @
b0 D
b1 F
b11111111111111110000000000000000 $
b11111111111111110000000000000000 A
b11111111111111110000000000000000 G
b0 C
b0 2
b0 <
03
b10 M
04
10
b1010 7
b10 8
1-
#380000
0-
#385000
1-
#390000
0-
#395000
b10 F
1(
b1 C
13
b1 M
14
1-
#400000
0-
#405000
1B
1&
b11111111111111110000000000000100 )
b11111111111111110000000000000100 :
b11111111111111110000000000000100 '
b11111111111111110000000000000100 >
b11111111111111110000000000000100 E
b1 F
b11100011101000000000000000000001 2
b11100011101000000000000000000001 <
0(
b10 C
b101 M
b1011 7
b11 8
1-
#410000
0-
#415000
0B
0&
b11111111111111110000000000000010 )
b11111111111111110000000000000010 :
b11111111111111110000000000000010 '
b11111111111111110000000000000010 >
b11111111111111110000000000000010 E
b10 F
b11111111111111110000000000000010 $
b11111111111111110000000000000010 A
b11111111111111110000000000000010 G
1(
b1 C
1-
#420000
0-
#425000
1B
1&
b11111111111111110000000000000110 )
b11111111111111110000000000000110 :
b11111111111111110000000000000110 '
b11111111111111110000000000000110 >
b11111111111111110000000000000110 E
b1110001110100000 %
b1110001110100000 @
b1110001110100000 D
b1 F
0(
b10 C
1-
#430000
0-
#435000
0B
0&
b10 F
b11111111111111110000000000000100 )
b11111111111111110000000000000100 :
b11111111111111110000000000000100 '
b11111111111111110000000000000100 >
b11111111111111110000000000000100 E
b0 %
b0 @
b0 D
b11111111111111110000000000000100 $
b11111111111111110000000000000100 A
b11111111111111110000000000000100 G
1(
b1 C
1-
#440000
0-
#445000
1B
1&
b11111111111111110000000000001000 )
b11111111111111110000000000001000 :
b11111111111111110000000000001000 '
b11111111111111110000000000001000 >
b11111111111111110000000000001000 E
b1 %
b1 @
b1 D
b1 F
b11100011101000000001000000000010 2
b11100011101000000001000000000010 <
0(
b10 C
1-
#450000
0-
#455000
0B
0&
b10 F
b11111111111111110000000000000110 )
b11111111111111110000000000000110 :
b11111111111111110000000000000110 '
b11111111111111110000000000000110 >
b11111111111111110000000000000110 E
b0 %
b0 @
b0 D
b11111111111111110000000000000110 $
b11111111111111110000000000000110 A
b11111111111111110000000000000110 G
1(
b1 C
1-
