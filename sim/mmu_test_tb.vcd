$date
	Sun Jul 27 08:50:34 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module mmu_test_tb $end
$var wire 32 ! tlb_misses [31:0] $end
$var wire 32 " tlb_hits [31:0] $end
$var wire 32 # page_faults [31:0] $end
$var wire 1 $ mmu_busy $end
$var wire 1 % mem_write $end
$var wire 32 & mem_wdata [31:0] $end
$var wire 2 ' mem_size [1:0] $end
$var wire 1 ( mem_req $end
$var wire 32 ) mem_paddr [31:0] $end
$var wire 1 * cpu_ready $end
$var wire 32 + cpu_rdata [31:0] $end
$var wire 1 , cpu_abort $end
$var wire 32 - asid_switches [31:0] $end
$var reg 1 . cache_enable $end
$var reg 1 / clk $end
$var reg 1 0 cpu_req $end
$var reg 2 1 cpu_size [1:0] $end
$var reg 32 2 cpu_vaddr [31:0] $end
$var reg 32 3 cpu_wdata [31:0] $end
$var reg 1 4 cpu_write $end
$var reg 8 5 current_asid [7:0] $end
$var reg 4 6 domain_access [3:0] $end
$var reg 1 7 mem_abort $end
$var reg 32 8 mem_rdata [31:0] $end
$var reg 1 9 mem_ready $end
$var reg 1 : mmu_enable $end
$var reg 1 ; rst_n $end
$var reg 32 < tlb_flush_addr [31:0] $end
$var reg 1 = tlb_flush_all $end
$var reg 1 > tlb_flush_asid $end
$var reg 8 ? tlb_flush_asid_val [7:0] $end
$var reg 1 @ tlb_flush_entry $end
$var reg 1 A tlb_flush_global $end
$var reg 32 B ttb_base [31:0] $end
$var integer 32 C test_count [31:0] $end
$var integer 32 D test_passed [31:0] $end
$scope module u_mmu $end
$var wire 1 . cache_enable $end
$var wire 1 / clk $end
$var wire 1 , cpu_abort $end
$var wire 32 E cpu_rdata [31:0] $end
$var wire 1 * cpu_ready $end
$var wire 1 0 cpu_req $end
$var wire 2 F cpu_size [1:0] $end
$var wire 32 G cpu_vaddr [31:0] $end
$var wire 32 H cpu_wdata [31:0] $end
$var wire 1 4 cpu_write $end
$var wire 8 I current_asid [7:0] $end
$var wire 4 J domain_access [3:0] $end
$var wire 1 7 mem_abort $end
$var wire 32 K mem_rdata [31:0] $end
$var wire 1 9 mem_ready $end
$var wire 1 $ mmu_busy $end
$var wire 1 : mmu_enable $end
$var wire 1 ; rst_n $end
$var wire 32 L tlb_flush_addr [31:0] $end
$var wire 1 = tlb_flush_all $end
$var wire 1 > tlb_flush_asid $end
$var wire 8 M tlb_flush_asid_val [7:0] $end
$var wire 1 @ tlb_flush_entry $end
$var wire 1 A tlb_flush_global $end
$var wire 32 N ttb_base [31:0] $end
$var wire 10 O va_tiny_page_offset [9:0] $end
$var wire 20 P va_tiny_page_index [19:0] $end
$var wire 12 Q va_small_page_offset [11:0] $end
$var wire 20 R va_small_page_index [19:0] $end
$var wire 20 S va_section_offset [19:0] $end
$var wire 20 T va_section_index [19:0] $end
$var wire 8 U va_page_sub [7:0] $end
$var wire 16 V va_large_page_offset [15:0] $end
$var wire 20 W va_large_page_index [19:0] $end
$var wire 32 X l2_addr [31:0] $end
$var wire 32 Y l1_addr [31:0] $end
$var wire 1 Z asid_changed $end
$var reg 32 [ asid_switches [31:0] $end
$var reg 1 \ data_valid $end
$var reg 1 ] domain_ok $end
$var reg 32 ^ final_paddr [31:0] $end
$var reg 32 _ l1_pte [31:0] $end
$var reg 32 ` l2_pte [31:0] $end
$var reg 32 a mem_paddr [31:0] $end
$var reg 1 ( mem_req $end
$var reg 1 b mem_req_prev $end
$var reg 2 c mem_size [1:0] $end
$var reg 32 d mem_wdata [31:0] $end
$var reg 1 % mem_write $end
$var reg 3 e next_state [2:0] $end
$var reg 32 f page_faults [31:0] $end
$var reg 1 g permission_ok $end
$var reg 8 h prev_asid [7:0] $end
$var reg 3 i state [2:0] $end
$var reg 1 j tlb_hit $end
$var reg 5 k tlb_hit_index [4:0] $end
$var reg 32 l tlb_hits [31:0] $end
$var reg 32 m tlb_misses [31:0] $end
$var reg 5 n tlb_next_replace [4:0] $end
$scope begin $ivl_for_loop0 $end
$var integer 32 o i [31:0] $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop1 $end
$var integer 32 p i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop2 $end
$var integer 32 q i [31:0] $end
$scope begin $unm_blk_88 $end
$var reg 32 r expected_data [31:0] $end
$var reg 32 s test_addr [31:0] $end
$upscope $end
$upscope $end
$scope task test_memory_access $end
$var reg 1 t expect_abort $end
$var reg 32 u expected_rdata [31:0] $end
$var reg 32 v vaddr [31:0] $end
$var reg 32 w wdata [31:0] $end
$var reg 1 x write $end
$upscope $end
$scope task wait_mmu_ready $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xx
bx w
bx v
bx u
xt
bx s
bx r
b0 q
b100000000000000000000 p
b100000 o
b0 n
b0 m
b0 l
b0 k
0j
b0 i
b0 h
1g
b0 f
b0 e
b0 d
b10 c
0b
b0 a
bx `
bx _
b0 ^
1]
0\
b0 [
1Z
b10000000000000000 Y
bx0000000000 X
b0 W
b0 V
b0 U
b0 T
b0 S
b0 R
b0 Q
b0 P
b0 O
b10000000000000000 N
b0 M
b0 L
b0 K
b101 J
b1 I
b0 H
b0 G
b10 F
b0 E
b0 D
b0 C
b10000000000000000 B
0A
0@
b0 ?
0>
0=
b0 <
0;
1:
19
b0 8
07
b101 6
b1 5
04
b0 3
b0 2
b10 1
00
0/
1.
b0 -
0,
b0 +
1*
b0 )
0(
b10 '
b0 &
0%
0$
b0 #
b0 "
b0 !
$end
#5000
b100000 o
1/
#10000
0/
#15000
b100000 o
1/
#20000
0/
#25000
b100000 o
1/
#30000
0/
#35000
b100000 o
1/
#40000
0/
#45000
b1 -
b1 [
0Z
b1 h
1;
1/
#50000
0/
#55000
1/
#60000
0/
#65000
1/
#70000
0/
#75000
1/
#80000
0/
#85000
1/
#90000
0/
#95000
0*
b100000000000 P
b10000000000001000 Y
b10 T
b100000 W
b1000000000 R
1(
b1000000000000000000000 )
b1000000000000000000000 a
b100 e
b1000000000000000000000 ^
10
b1000000000000000000000 2
b1000000000000000000000 G
b1 C
0t
b11011110101011011011111011101111 u
b0 w
0x
b1000000000000000000000 v
0:
1/
#100000
0/
#105000
1*
1(
b11011110101011011011111011101111 +
b11011110101011011011111011101111 E
b11011110101011011011111011101111 8
b11011110101011011011111011101111 K
1\
1b
b100 i
1/
#110000
0/
#115000
1/
#120000
0/
#125000
0(
b0 e
00
b1 D
1/
#130000
0/
#135000
0*
0\
0b
b0 i
b10000000000 P
b10000000000000100 Y
b1 T
b10000 W
b100000000 R
0(
b100000000000000000000 )
b100000000000000000000 a
b1 e
b100000000000000000000 ^
10
b100000000000000000000 2
b100000000000000000000 G
b10 C
b100000000000000000000 v
1:
1/
#140000
0/
#145000
b10 e
1$
b1 i
1/
#150000
0/
#155000
b101 e
b10000000000000100 )
b10000000000000100 a
1(
b1 !
b1 m
b10 i
1/
#160000
0/
#165000
b100000000000000000000 )
b100000000000000000000 a
0(
1,
b11011110101011011011110000000000 X
b1000000000110000011110 +
b1000000000110000011110 E
b1000000000110000011110 8
b1000000000110000011110 K
1\
1b
b101 i
b11011110101011011011111011101111 _
1/
#170000
0/
#175000
b1 #
b1 f
0\
0b
1/
#180000
0/
#185000
b10 #
b10 f
b0 e
00
1/
#190000
0/
#195000
1*
0,
0$
b11 #
b11 f
b0 i
1/
#200000
0/
#205000
0*
b1 e
10
b11 C
1/
#210000
0/
#215000
b10 e
1$
b1 i
1/
#220000
0/
#225000
b100 e
b10000000000000100 )
b10000000000000100 a
1(
b10 !
b10 m
b10 i
1/
#230000
0/
#235000
1*
b11011110101000000000000000000000 )
b11011110101000000000000000000000 a
1(
0$
1j
b11011110101000000000000000000000 ^
b1000000000110000000000 X
1\
1b
b100 i
b1 n
b1000000000110000011110 _
1/
#240000
0/
#245000
1j
bx +
bx E
bx 8
bx K
1/
#250000
0/
#255000
0(
1j
b0 e
00
1/
#260000
0/
#265000
0*
0\
0b
b0 i
b100 P
b1 e
0(
b1000000000000 )
b1000000000000 a
0j
b1000000000000 ^
b10000000000000000 Y
b0 T
b1000000000000 S
b0 W
b1000000000000 V
b1 R
b1000000000110000000100 X
b1 U
10
b1000000000000 2
b1000000000000 G
b100 C
b11001010111111101011101010111110 u
b1000000000000 v
1/
#270000
0/
#275000
b10 e
1$
b1 i
1/
#280000
0/
#285000
b101 e
b10000000000000000 )
b10000000000000000 a
1(
b11 !
b11 m
b10 i
1/
#290000
0/
#295000
b1000000000000 )
b1000000000000 a
0(
1,
bx0000000100 X
1\
1b
b101 i
b10001000000000001 +
b10001000000000001 E
b10001000000000001 8
b10001000000000001 K
bx _
1/
#300000
0/
#305000
b100 #
b100 f
0\
0b
1/
#310000
0/
#315000
b101 #
b101 f
b0 e
00
1/
#320000
0/
#325000
1*
0,
0$
b110 #
b110 f
b0 i
1/
#330000
0/
#335000
0*
b1 e
10
b101 C
1/
#340000
0/
#345000
b10 e
1$
b1 i
1/
#350000
0/
#355000
b11 e
b10000000000000000 )
b10000000000000000 a
1(
b100 !
b100 m
b10 i
1/
#360000
0/
#365000
b10001000000000100 )
b10001000000000100 a
1(
b100 e
b10001000000000100 X
1\
1b
b11 i
b10001000000000001 _
1/
#370000
0/
#375000
1*
b10001000000000000 )
b10001000000000000 a
1(
0$
b10001000000000000 ^
b100 i
b1100000001000000111110 +
b1100000001000000111110 E
b1100000001000000111110 8
b1100000001000000111110 K
b10 n
b10001000000000001 `
1/
#380000
0/
#385000
b0 +
b0 E
b0 8
b0 K
1/
#390000
0/
#395000
0(
b0 e
00
1/
#400000
0/
#405000
0*
b10000000000000 )
b10000000000000 a
b10000000000000 ^
0\
0b
b0 i
b1000 P
b1 e
0(
b10000000000000 S
b10000000000000 V
b10 R
b10001000000001000 X
b10 U
10
b10000000000000 2
b10000000000000 G
b1